package com.allen.web.controller.homepagefile;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import javax.annotation.Resource;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.commons.CommonsMultipartFile;
import org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest;

import com.allen.core.common.Const;
import com.allen.core.feature.orm.mybatis.Page;
import com.allen.core.generic.GenericController;
import com.allen.web.enums.EnumBool;
import com.allen.web.model.HomepageFile;
import com.allen.web.service.homepagefile.HomepageFileService;

@RequestMapping("/homepageFile")
@Controller
public class HomepageFileController extends GenericController {
	@Resource
	HomepageFileService homepageFileService;
	
	/**
	 * 首页文件维护页首页
	 */
	@RequestMapping("/listHomepageFile")
	public String listHomepageFile(@RequestParam(value = "pageNo", required = false) String pageNo,
			@RequestParam(value = "fileNameSearch", required = false) String fileNameSearch, ModelMap map) {
		if (!StringUtils.isNotBlank(pageNo)) {
			pageNo = "1";
		}
		Page<HomepageFile> page = new Page<>(Integer.parseInt(pageNo), Const.PAGE_SIZE);
		HomepageFile homepageFile = new HomepageFile();
		homepageFile.setRealName(fileNameSearch);
		List<HomepageFile> homepageFileList = this.homepageFileService.selectList(page, homepageFile);
		map.put("homepageFileList", homepageFileList);
		map.put("page", page);
		map.put("homepageFile", homepageFile);
		return "homepagefile/listHomepageFile";
	}
	
	/**
	 * 跳转新建文件页面
	 */
	@RequestMapping("addFile")
	public String addFile() {
		return "homepagefile/addFile";
	}
	
	/**
	 * 新建插入文件信息
	 */
	@RequestMapping("insertFile")
	public String insertFile(DefaultMultipartHttpServletRequest request, ModelMap model) throws IllegalStateException, IOException{
		
		CommonsMultipartFile aPath = (CommonsMultipartFile) request.getFile("path");
		String remark = request.getParameter("remark");
		
		String realName = aPath.getOriginalFilename();
		String rootPath = this.getHomepageFilePath();
		String fileName = this.rename(realName);
		String path = rootPath + fileName;
		File localFile = new File(path);
		if (!localFile.exists()) {
			localFile.mkdirs();
		}
		// 写文件到本地
		aPath.transferTo(localFile);
		HomepageFile homepageFile = new HomepageFile();
		homepageFile.setId(UUID.randomUUID().toString());
		homepageFile.setPath("/upload/homepagefile/"+fileName);
		homepageFile.setRealName(realName);
		homepageFile.setRemark(remark);
		homepageFile.setCreateUser(this.getLoginUser().getUsername());
		homepageFile.setCreateUserid(this.getLoginUser().getUserId());
		homepageFile.setCreateTime(new Date());
		homepageFile.setIsvalid(EnumBool.YES.getCode());
		
		this.homepageFileService.insert(homepageFile);
		return "redirect:/homepageFile/listHomepageFile.html";
	}
	
	/**
	 * 更改isValid值来“删除”文件
	 */
	@RequestMapping("/deleteFile")
	public String deleteFile(
			@RequestParam(value="id", required = false)  String id,ModelMap map)
	{	
		//通过更新isValid来“删除”
		this.homepageFileService.deleteFile(id);
		return "redirect:/homepageFile/listHomepageFile.html";
	}
	
	
	private String rename(String fileName) {
		String body;
		String ext;
		Date date = new Date();
		int pot = fileName.lastIndexOf('.');
		if (pot != -1) {
			body = Long.toString(date.getTime());
			ext = fileName.substring(pot);
		} else {
			body = Long.toString((new Date()).getTime());
			ext = "";
		}
		return body + ext;

	}
}
