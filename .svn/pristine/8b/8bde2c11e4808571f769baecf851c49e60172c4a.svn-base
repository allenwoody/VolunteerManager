package com.allen.web.service.organization;

import java.util.List;
import java.util.Map;

import com.allen.core.entity.JsonTreeNode;
import com.allen.core.feature.orm.mybatis.Page;
import com.allen.core.generic.GenericService;
import com.allen.web.model.Organization;

/**
 * 机构服务
 * @author wenquan
 *
 */
public interface OrganizationService extends GenericService<Organization, String> {

	/**
	 * 获取下级机构
	 * @param parentId
	 * @return
	 */
	List<Organization> selectByParentId(String parentId);
	
	/**
	 * 根据机构编码查询机构
	 * @param orgCode
	 * @return
	 */
	Organization selectByOrgCode(String orgCode);

	/**
	 * 分页查询机构
	 * @param page
	 * @param model
	 * @return
	 */
	List<Organization> selectByExample(Page<Organization> page, Organization model);
	
	/**
	 * 
	* @Title: selectByExample 
	* @Description: 不做分页了
	* @param @param model
	* @param @return    设定文件 
	* @return List<Organization>    返回类型 
	* @throws
	 */
	List<Organization> selectByExample(Organization model);

	/**
     * 按机构类型查询机构
     * @param orgType
     * @return
     */
	List<Organization> selectByOrgType(String orgType);
	/**
	 * 按机构级别查询机构
	 * @param string
	 * @return
	 */
	List<Organization> selectListByLevel(Integer level);
	
	/**
	 * 构建机构树
	 * @return
	 * @throws CloneNotSupportedException 
	 * @throws Exception 
	 */
	JsonTreeNode buildOrgTree() throws Exception;
	
	/**
	 * 构建机构树（集团和事业部）
	 * @return
	 * @throws Exception
	 */
	JsonTreeNode buildBusinessUnitTree() throws Exception;
	
	/**
	 * 构建事业部(含集团)机构树
	 * @return
	 * @throws Exception
	 */
	JsonTreeNode buildBusinessTree(String userOrgId) throws Exception;
	
	/**
	 * 校验使用：同一机构下，不能出现同名机构
	 * @param parentId
	 * @param OrgName
	 * @return
	 */
	List<Organization> selectbyParentIdAndOrgName(String parentId, String OrgName);	

	/**
	 * 校验使用：同一机构下，不能出现同名机构代码
	 * @param parentId
	 * @param orgcode
	 * @return
	 */
	List<Organization> selectbyParentIdAndOrgCode(String parentId, String orgcode);
	    
	/**
	 * 根据事业部Id查询事业部下的医院/门诊
	 * @param valueOf
	 * @return
	 */
	List<Organization> selectbyParentIdAndOrgType(String parentId, String orgType);

	/**
	 * 获取事业部列表（包含子事业部）
	 * @return
	 */
	List<Organization> selectBusinessUnitList();	

	/**
	 * 获取事业部下的医院门诊列表
	 * @param buid
	 * @return
	 */
	List<Organization> selectHospitals(String buid);	
	
	/**
	 * 按机构名称查询机构
	 * @param OrgName
	 * @return
	 */
	List<Organization> selectByOrgName(String OrgName);	
	
}
