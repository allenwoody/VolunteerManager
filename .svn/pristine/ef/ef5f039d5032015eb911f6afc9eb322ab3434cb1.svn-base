<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.allen.web.dao.AuditNodeMapper" >
  <resultMap id="BaseResultMap" type="com.allen.web.model.AuditNode" >
    <id column="node_id" property="nodeId" jdbcType="CHAR" />
    <result column="task_id" property="taskId" jdbcType="CHAR" />
    <result column="asignee_id" property="asigneeId" jdbcType="CHAR" />
    <result column="asignee_name" property="asigneeName" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="CHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="sort_code" property="sortCode" jdbcType="INTEGER" />
    <result column="node_state" property="nodeState" jdbcType="CHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    node_id, task_id, asignee_id, asignee_name, role_id, role_name, sort_code, node_state, 
    remark, create_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.allen.web.model.AuditNodeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from audit_node
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from audit_node
    where node_id = #{nodeId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from audit_node
    where node_id = #{nodeId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.allen.web.model.AuditNodeExample" >
    delete from audit_node
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.allen.web.model.AuditNode" >
    insert into audit_node (node_id, task_id, asignee_id, 
      asignee_name, role_id, role_name, 
      sort_code, node_state, remark, 
      create_date)
    values (#{nodeId,jdbcType=CHAR}, #{taskId,jdbcType=CHAR}, #{asigneeId,jdbcType=CHAR}, 
      #{asigneeName,jdbcType=VARCHAR}, #{roleId,jdbcType=CHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{sortCode,jdbcType=INTEGER}, #{nodeState,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.allen.web.model.AuditNode" >
    insert into audit_node
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="nodeId != null" >
        node_id,
      </if>
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="asigneeId != null" >
        asignee_id,
      </if>
      <if test="asigneeName != null" >
        asignee_name,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="sortCode != null" >
        sort_code,
      </if>
      <if test="nodeState != null" >
        node_state,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="nodeId != null" >
        #{nodeId,jdbcType=CHAR},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=CHAR},
      </if>
      <if test="asigneeId != null" >
        #{asigneeId,jdbcType=CHAR},
      </if>
      <if test="asigneeName != null" >
        #{asigneeName,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=CHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="sortCode != null" >
        #{sortCode,jdbcType=INTEGER},
      </if>
      <if test="nodeState != null" >
        #{nodeState,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.allen.web.model.AuditNodeExample" resultType="java.lang.Integer" >
    select count(*) from audit_node
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update audit_node
    <set >
      <if test="record.nodeId != null" >
        node_id = #{record.nodeId,jdbcType=CHAR},
      </if>
      <if test="record.taskId != null" >
        task_id = #{record.taskId,jdbcType=CHAR},
      </if>
      <if test="record.asigneeId != null" >
        asignee_id = #{record.asigneeId,jdbcType=CHAR},
      </if>
      <if test="record.asigneeName != null" >
        asignee_name = #{record.asigneeName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=CHAR},
      </if>
      <if test="record.roleName != null" >
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.sortCode != null" >
        sort_code = #{record.sortCode,jdbcType=INTEGER},
      </if>
      <if test="record.nodeState != null" >
        node_state = #{record.nodeState,jdbcType=CHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update audit_node
    set node_id = #{record.nodeId,jdbcType=CHAR},
      task_id = #{record.taskId,jdbcType=CHAR},
      asignee_id = #{record.asigneeId,jdbcType=CHAR},
      asignee_name = #{record.asigneeName,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=CHAR},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      sort_code = #{record.sortCode,jdbcType=INTEGER},
      node_state = #{record.nodeState,jdbcType=CHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.allen.web.model.AuditNode" >
    update audit_node
    <set >
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=CHAR},
      </if>
      <if test="asigneeId != null" >
        asignee_id = #{asigneeId,jdbcType=CHAR},
      </if>
      <if test="asigneeName != null" >
        asignee_name = #{asigneeName,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=CHAR},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="sortCode != null" >
        sort_code = #{sortCode,jdbcType=INTEGER},
      </if>
      <if test="nodeState != null" >
        node_state = #{nodeState,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=VARCHAR},
      </if>
    </set>
    where node_id = #{nodeId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.allen.web.model.AuditNode" >
    update audit_node
    set task_id = #{taskId,jdbcType=CHAR},
      asignee_id = #{asigneeId,jdbcType=CHAR},
      asignee_name = #{asigneeName,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=CHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      sort_code = #{sortCode,jdbcType=INTEGER},
      node_state = #{nodeState,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=VARCHAR}
    where node_id = #{nodeId,jdbcType=CHAR}
  </update>
</mapper>