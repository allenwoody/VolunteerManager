package com.allen.web.service.organization;

import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Service;

import com.allen.core.entity.JsonTreeNode;
import com.allen.core.feature.orm.mybatis.Page;
import com.allen.core.generic.GenericDao;
import com.allen.core.generic.GenericServiceImpl;
import com.allen.web.dao.OrganizationMapper;
import com.allen.web.enums.EnumBool;
import com.allen.web.enums.EnumOrgType;
import com.allen.web.model.Organization;
import com.allen.web.model.OrganizationExample;
import com.allen.web.model.OrganizationExample.Criteria;

/**
 * 
* @ClassName: OrganizationServiceImpl 
* @Description: 机构服务实现 
* @author wenquan
* @date 2016年1月27日 上午11:09:59 
*
 */
@Service
public class OrganizationServiceImpl extends GenericServiceImpl<Organization, String>implements OrganizationService {

	@Resource
	OrganizationMapper oranizationMapper;
	private JsonTreeNode root;//TODO 后续考虑改为使用Ehcache缓存
	private JsonTreeNode rootWithScope4GroupAndBU;
	
	@Override
	public List<Organization> selectList() {
		OrganizationExample example = new OrganizationExample();
		example.createCriteria().andIsValidEqualTo(EnumBool.YES.getCode());
		return this.oranizationMapper.selectByExample(example);
	}

	@Override
	public List<Organization> selectByParentId(String parentId){
		OrganizationExample example = new OrganizationExample();
		example.createCriteria().andParentIdEqualTo(parentId).andIsValidEqualTo(EnumBool.YES.getCode());
		return this.oranizationMapper.selectByExample(example);
	}
	
	public List<Organization> selectByParentIdWithScope4GroupAndBU(String parentId){
		OrganizationExample example = new OrganizationExample();
		example.createCriteria().andParentIdEqualTo(parentId).andIsValidEqualTo(EnumBool.YES.getCode())
			.andOrgTypeNotEqualTo(EnumOrgType.DEPARTMENT.getCode()).andOrgTypeNotEqualTo(EnumOrgType.HOSPITAL.getCode());
		return this.oranizationMapper.selectByExample(example);
	}
	
	@Override
	public List<Organization> selectByExample(Page<Organization> page, Organization model){
		OrganizationExample example = new OrganizationExample();
		Criteria criteria = example.createCriteria();
		if (StringUtils.isNotBlank(model.getOrgType())) {
			criteria.andOrgTypeEqualTo(model.getOrgType());
		}
		if (StringUtils.isNotBlank(model.getOrgName())) {
			criteria.andOrgNameLike("%"+model.getOrgName()+"%");
		}
		if (StringUtils.isNotBlank(model.getOrgCode())) {
			criteria.andOrgCodeLike(model.getOrgCode());
		}
		if (null!=model.getParentId()) {
			criteria.andParentIdEqualTo(model.getParentId());
		}
		criteria.andIsValidEqualTo(EnumBool.YES.getCode());
		return this.oranizationMapper.selectByExample(page, example);
	}
	
	@Override
	public List<Organization> selectByExample(Organization model){
		OrganizationExample example = new OrganizationExample();
		Criteria criteria = example.createCriteria();
		if (StringUtils.isNotBlank(model.getOrgType())) {
			criteria.andOrgTypeEqualTo(model.getOrgType());
		}
		if (StringUtils.isNotBlank(model.getOrgName())) {
			criteria.andOrgNameLike("%"+model.getOrgName()+"%");
		}
		if (StringUtils.isNotBlank(model.getOrgCode())) {
			criteria.andOrgCodeLike(model.getOrgCode());
		}
		if (null!=model.getParentId()) {
			criteria.andParentIdEqualTo(model.getParentId());
		}
		criteria.andIsValidEqualTo(EnumBool.YES.getCode());
		return this.oranizationMapper.selectByExample(example);
	}
	
	@Override
	public Organization selectByOrgCode(String orgCode) {
		OrganizationExample example = new OrganizationExample();
		example.createCriteria().andOrgCodeEqualTo(orgCode).andIsValidEqualTo(EnumBool.YES.getCode());
		List<Organization> list = this.oranizationMapper.selectByExample(example);
		if (list.isEmpty()) {
			return null;
		}
		return list.get(0);
	}

	@Override
	public List<Organization> selectByOrgType(String OrgType){
		OrganizationExample example = new OrganizationExample();
		example.createCriteria().andOrgTypeEqualTo(OrgType).andIsValidEqualTo(EnumBool.YES.getCode());
		List<Organization> list = this.oranizationMapper.selectByExample(example);
		return list;
	}
	
	@Override
	public GenericDao<Organization, String> getDao() {
		return this.oranizationMapper;
	}
	
	@Override
	public List<Organization> selectListByLevel(Integer level) {
		OrganizationExample example = new OrganizationExample();
		example.createCriteria().andIsValidEqualTo(EnumBool.YES.getCode()).andLevelEqualTo(level);
		return this.oranizationMapper.selectByExample(example);
	}

	@Override
	public JsonTreeNode buildOrgTree() throws Exception {
//		if (this.root==null) {
//			initOrgTree();
//		}
		//因为启用了mybatis二级缓存，此处root对象不需要再被缓存了。
		initOrgTree();
		return this.root;
	}
	
	@Override
	public JsonTreeNode buildBusinessUnitTree() throws Exception {
//		if (this.rootWithScope4GroupAndBU==null) {
//			initBusinessUnitTree();
//		}
		//因为启用了mybatis二级缓存，此处rootWithScope4GroupAndBU对象不需要再被缓存了。
		initBusinessUnitTree();
		return this.rootWithScope4GroupAndBU;
	}
	
	/**
	 * 递归创建树
	 * @param node
	 * @param prototype
	 * @throws CloneNotSupportedException
	 */
	private void build(JsonTreeNode node, JsonTreeNode prototype) throws CloneNotSupportedException{
		List<Organization> list = this.selectByParentId(node.getKey());
		if (list.isEmpty()) {
//			node.setState(null);
			return;
		}
		for (Organization Organization : list) {
			JsonTreeNode childNode = (JsonTreeNode) prototype.clone();
			childNode.setKey(Organization.getOrgId().toString());
			childNode.setTitle(Organization.getOrgName());
//			childNode.setChedcked(true);
			node.addChild(childNode);
			build(childNode, prototype);
		}
	}
	
	private void buildWithScope4GroupAndBU(JsonTreeNode node, JsonTreeNode prototype) throws CloneNotSupportedException{
		List<Organization> list = this.selectByParentIdWithScope4GroupAndBU(node.getKey());
		if (list.isEmpty()) {
			return;
		}
		for (Organization Organization : list) {
			JsonTreeNode childNode = (JsonTreeNode) prototype.clone();
			childNode.setKey(Organization.getOrgId().toString());
			childNode.setTitle(Organization.getOrgName());
			node.addChild(childNode);
			buildWithScope4GroupAndBU(childNode, prototype);
		}
	}
	
	/**
	 * 创建树
	 * @param node
	 * @throws CloneNotSupportedException
	 */
	private void buildTree(Organization root) throws CloneNotSupportedException{
		JsonTreeNode prototype = new JsonTreeNode();// 用于克隆的JsonTreeNode原型
		this.root = (JsonTreeNode) prototype.clone();
		this.root.setKey(root.getOrgId().toString());
		this.root.setTitle(root.getOrgName());
		this.build(this.root, prototype);
	}
	
	private void buildTreeWithScope4GroupAndBU(Organization root) throws CloneNotSupportedException{
		JsonTreeNode prototype = new JsonTreeNode();// 用于克隆的JsonTreeNode原型
		this.rootWithScope4GroupAndBU = (JsonTreeNode) prototype.clone();
		this.rootWithScope4GroupAndBU.setKey(root.getOrgId().toString());
		this.rootWithScope4GroupAndBU.setTitle(root.getOrgName());
		this.buildWithScope4GroupAndBU(this.rootWithScope4GroupAndBU, prototype);
	}
	
	/**
	 * 刷新机构树对象
	 * @throws Exception
	 */
	private void refreshOrgTree() throws Exception{
		this.initOrgTree();
		this.initBusinessUnitTree();
	}
	/**
	 * 实例化机构树对象
	 * @throws Exception
	 */
	private void initOrgTree() throws Exception{
		Organization group;
		try {
			group = this.selectByOrgType(EnumOrgType.GROUP.getCode()).get(0);
		} catch (Exception e) {
			throw new Exception("机构表数据错误：获取集团信息失败");
		}
		buildTree(group);
	}
	
	private void initBusinessUnitTree() throws Exception{
		Organization group;
		try {
			group = this.selectByOrgType(EnumOrgType.GROUP.getCode()).get(0);
		} catch (Exception e) {
			throw new Exception("机构表数据错误：获取集团信息失败");
		}
		buildTreeWithScope4GroupAndBU(group);
	}

	public JsonTreeNode getRoot() {
		return root;
	}

	public void setRoot(JsonTreeNode root) {
		this.root = root;
	}

	@Override
	public int insert(Organization model) {
		int i = super.insert(model);
		try {
			this.refreshOrgTree();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return i;
	}

	@Override
	public int update(Organization model) {
		int i = super.update(model);
		try {
			this.refreshOrgTree();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return i;
	}

	@Override
	public int delete(String id) {
		Organization record = new Organization();
		record.setOrgId(id);
		record.setIsValid(EnumBool.NO.getCode());
		int i = this.oranizationMapper.updateByPrimaryKeySelective(record);
		//int i = super.delete(id);
		try {
			this.refreshOrgTree();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return i;
	}


	@Override
	public List<Organization> selectbyParentIdAndOrgName(String parentId, String OrgName) {
		OrganizationExample example = new OrganizationExample();
		example.createCriteria().andIsValidEqualTo(EnumBool.YES.getCode()).andParentIdEqualTo(parentId).andOrgNameEqualTo(OrgName);
		return this.oranizationMapper.selectByExample(example);
	}

	@Override
	public List<Organization> selectbyParentIdAndOrgCode(String parentId, String orgcode) {
		OrganizationExample example = new OrganizationExample();
		example.createCriteria().andIsValidEqualTo(EnumBool.YES.getCode()).andParentIdEqualTo(parentId).andOrgCodeEqualTo(orgcode);
		return this.oranizationMapper.selectByExample(example);
	}

	@Override
	public List<Organization> selectbyParentIdAndOrgType(String parentId,String OrgType) {
		OrganizationExample example = new OrganizationExample();
		example.createCriteria().andIsValidEqualTo(EnumBool.YES.getCode()).andParentIdEqualTo(parentId).andOrgTypeEqualTo(OrgType);
		return this.oranizationMapper.selectByExample(example);
	}

	@Override
	public JsonTreeNode buildBusinessTree(String userOrgId) throws Exception {
		initBusinessTree(userOrgId);
		return this.rootWithScope4GroupAndBU;
	}

	private void initBusinessTree(String userOrgId) throws Exception {
		Organization group;
		try {
			group = this.selectByOrgType(EnumOrgType.GROUP.getCode()).get(0);
		} catch (Exception e) {
			throw new Exception("机构表数据错误：获取集团信息失败");
		}
		buildTreeWithScope(group,userOrgId);		
	}

	private void buildTreeWithScope(Organization root,String userOrgId) throws CloneNotSupportedException {
		JsonTreeNode prototype = new JsonTreeNode();// 用于克隆的JsonTreeNode原型
		Organization Organization = this.oranizationMapper.selectByPrimaryKey(userOrgId);
		if(EnumOrgType.GROUP.getCode().equals(Organization.getOrgType())){
			this.rootWithScope4GroupAndBU = (JsonTreeNode) prototype.clone();
			this.rootWithScope4GroupAndBU.setKey(root.getOrgId().toString());
			this.rootWithScope4GroupAndBU.setTitle(root.getOrgName());
			this.buildWithScope(this.rootWithScope4GroupAndBU, prototype);
		}
		else{
			this.rootWithScope4GroupAndBU = (JsonTreeNode) prototype.clone();
			this.rootWithScope4GroupAndBU.setKey(String.valueOf(Organization.getOrgId()));
			this.rootWithScope4GroupAndBU.setTitle(Organization.getOrgName());
		}
	}

	private void buildWithScope(JsonTreeNode node, JsonTreeNode prototype) throws CloneNotSupportedException {
		List<Organization> list = this.selectByParentIdWithScope4GroupAndBU(node.getKey());
		if (list.isEmpty()) {
			return;
		}
		for (Organization Organization : list) {
			JsonTreeNode childNode = (JsonTreeNode) prototype.clone();
			childNode.setKey(Organization.getOrgId().toString());
			childNode.setTitle(Organization.getOrgName());
			node.addChild(childNode);
			buildWithScope(childNode, prototype);
		}
	}

	@Override
	public List<Organization> selectBusinessUnitList(){
		OrganizationExample example = new OrganizationExample();
		Criteria citeria1 = example.createCriteria();
		citeria1.andIsValidEqualTo(EnumBool.YES.getCode()).andOrgTypeEqualTo(EnumOrgType.BUSINESS_UNIT.getCode());
		Criteria citeria2 = example.createCriteria();
		citeria2.andIsValidEqualTo(EnumBool.YES.getCode()).andOrgTypeEqualTo(EnumOrgType.SUB_BUSINESS_UNIT.getCode());
		example.or(citeria2);
		return this.oranizationMapper.selectByExample(example);
	}

	@Override
	public List<Organization> selectHospitals(String buid) {
		OrganizationExample example = new OrganizationExample();
		example.createCriteria().andIsValidEqualTo(EnumBool.YES.getCode()).andParentIdEqualTo(buid).andOrgTypeEqualTo(EnumOrgType.HOSPITAL.getCode());
		return this.oranizationMapper.selectByExample(example);
	}

	@Override
	public List<Organization> selectByOrgName(String OrgName) {
		OrganizationExample example = new OrganizationExample();
		example.createCriteria().andIsValidEqualTo(EnumBool.YES.getCode()).andOrgNameEqualTo(OrgName);
		return this.oranizationMapper.selectByExample(example);
	}

}
